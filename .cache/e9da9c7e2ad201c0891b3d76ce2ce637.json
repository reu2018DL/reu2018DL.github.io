{"dependencies":[{"name":"C:\\Users\\pedoe\\Documents\\reu2018DL.github.io\\package.json","includedInParent":true,"mtime":1531145464000},{"name":"C:\\Users\\pedoe\\Documents\\reu2018DL.github.io\\.babelrc","includedInParent":true,"mtime":1530821782000},{"name":"C:\\Users\\pedoe\\Documents\\reu2018DL.github.io\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1523403970000}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromPixelsProgram = (function () {\n    function FromPixelsProgram(outputShape) {\n        this.variableNames = ['A'];\n        var height = outputShape[0], width = outputShape[1];\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + width + \".0, \" + height + \".0);\\n\\n        vec4 values = texture2D(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \";\n    }\n    return FromPixelsProgram;\n}());\nexports.FromPixelsProgram = FromPixelsProgram;\n","map":{"mappings":[{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\from_pixels_gpu.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FromPixelsProgram = (function () {\n    function FromPixelsProgram(outputShape) {\n        this.variableNames = ['A'];\n        var height = outputShape[0], width = outputShape[1];\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + width + \".0, \" + height + \".0);\\n\\n        vec4 values = texture2D(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \";\n    }\n    return FromPixelsProgram;\n}());\nexports.FromPixelsProgram = FromPixelsProgram;\n"},"lineCount":13}},"hash":"61c0e9ccf82096ebb0d1b0d5adc1f4a4","cacheData":{"env":{}}}