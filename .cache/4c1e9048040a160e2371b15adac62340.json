{"dependencies":[{"name":"C:\\Users\\rachu\\Documents\\GitHub\\reu2018DL.github.io\\package.json","includedInParent":true,"mtime":1531145462049},{"name":"C:\\Users\\rachu\\Documents\\GitHub\\reu2018DL.github.io\\.babelrc","includedInParent":true,"mtime":1530821780092},{"name":"C:\\Users\\rachu\\Documents\\GitHub\\reu2018DL.github.io\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1523403969000}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClipProgram = (function () {\n    function ClipProgram(aShape, min, max) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        var minFixed = min.toFixed(20);\n        var maxFixed = max.toFixed(20);\n        this.userCode = \"\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isNaN(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, \" + minFixed + \", \" + maxFixed + \"));\\n      }\\n    \";\n    }\n    return ClipProgram;\n}());\nexports.ClipProgram = ClipProgram;\n","map":{"mappings":[{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}}],"sources":{"..\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\clip_gpu.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClipProgram = (function () {\n    function ClipProgram(aShape, min, max) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        var minFixed = min.toFixed(20);\n        var maxFixed = max.toFixed(20);\n        this.userCode = \"\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isNaN(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, \" + minFixed + \", \" + maxFixed + \"));\\n      }\\n    \";\n    }\n    return ClipProgram;\n}());\nexports.ClipProgram = ClipProgram;\n"},"lineCount":14}},"hash":"2558e69dde7ac50bba3a8b605d8c4dac","cacheData":{"env":{}}}